#if !canImport(ObjectiveC)
import XCTest

extension DataTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DataTests = [
        ("testFromBytePointer", testFromBytePointer),
    ]
}

extension DateComponentsTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DateComponentsTest = [
        ("testBuildDate", testBuildDate),
        ("testValueForComponent", testValueForComponent),
    ]
}

extension POSIXTimeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__POSIXTimeTests = [
        ("testGetTimeOfDay", testGetTimeOfDay),
        ("testTimeSpec", testTimeSpec),
        ("testTimeVal", testTimeVal),
    ]
}

extension RangeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RangeTests = [
        ("testSubset", testSubset),
        ("testSubsetContainsElement", testSubsetContainsElement),
    ]
}

extension RegularExpressionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__RegularExpressionTests = [
        ("testEmoji", testEmoji),
        ("testExtendedRegex", testExtendedRegex),
        ("testMultipleSubexpressions", testMultipleSubexpressions),
        ("testSimpleRegex", testSimpleRegex),
        ("testWord", testWord),
    ]
}

extension StringTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringTests = [
        ("testUTF8Data", testUTF8Data),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(DataTests.__allTests__DataTests),
        testCase(DateComponentsTest.__allTests__DateComponentsTest),
        testCase(POSIXTimeTests.__allTests__POSIXTimeTests),
        testCase(RangeTests.__allTests__RangeTests),
        testCase(RegularExpressionTests.__allTests__RegularExpressionTests),
        testCase(StringTests.__allTests__StringTests),
    ]
}
#endif
